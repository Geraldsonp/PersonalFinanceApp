@using System.Linq.Expressions

    <div class="relative">
        @if (!string.IsNullOrEmpty(Prefix))
        {
            <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-500">@Prefix</span>
        }
        <input type="@Type" class="@GetInputClasses()" placeholder="@Placeholder" value="@Value" @onchange="OnValueChanged" @attributes="AdditionalAttributes" />
        @if (Icon != null)
        {
            <span class="absolute inset-y-0 right-0 flex items-center pr-3 text-gray-500">
                <IconComponent Icon="@Icon"></IconComponent>
            </span>
        }
    </div>
    @if (!string.IsNullOrEmpty(HelperText))
    {
        <p class="mt-2 text-sm text-gray-500">@HelperText</p>
    }

@code {
    [Parameter] public string Type { get; set; } = "text";
    [Parameter] public string Placeholder { get; set; } = "";
    [Parameter] public string Value { get; set; } = "";
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string HelperText { get; set; } = "";
    [Parameter] public string Prefix { get; set; } = "";
    [Parameter] public Icon Icon { get; set; } 
    [Parameter] public string ColorTag { get; set; } = "";
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> AdditionalAttributes { get; set; }

    private Task OnValueChanged(ChangeEventArgs e)
    {
        Value = e.Value.ToString();
        return ValueChanged.InvokeAsync(Value);
    }

    private string GetInputClasses()
    {
        var classes = new List<string>
{
"w-full",
"px-4",
"py-2",
"border",
"border-gray-300",
"rounded-md",
"focus:outline-none",
"focus:ring-2",
"focus:ring-blue-500",
"focus:border-transparent"
};

        if (!string.IsNullOrEmpty(Prefix))
        {
            classes.Add("pl-10");
        }

        if (Icon != null)
        {
            classes.Add("pr-10");
        }

        if (!string.IsNullOrEmpty(ColorTag))
        {
            classes.Add($"border-l-4 border-l-{ColorTag}");
        }

        return string.Join(" ", classes);
    }
}